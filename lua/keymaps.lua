vim.api.nvim_set_hl(0, 'CursorLineNr', { fg = '#ffffff' })
-- vim.api.nvim_set_hl(0, 'MiniIndentscopeSymbol', { fg = '#cfcfcf' })
vim.api.nvim_set_hl(0, 'MiniIndentscopeSymbol', { fg = '#a79984' })
vim.api.nvim_set_hl(0, 'NormalFloat', { bg = 'black' })
vim.api.nvim_set_hl(0, '@ibl.scope.char.1', { fg = '' })
vim.api.nvim_set_hl(0, 'NotificationInfo', { bg = '' })
vim.keymap.set({ 'n' }, '<C-s>', ':w<CR>')
vim.keymap.set({ 'n' }, '<C-a>', 'gg<S-v><S-g>', { silent = true })
vim.keymap.set({ 'n' }, '<leader>q', ':TroubleToggle<CR>')
vim.keymap.set({ 'n' }, '<leader>ff', 'gg<S-v><S-g>y', { silent = true })
vim.keymap.set({ 'n' }, '<leader>l1', ':set rnu nu<CR>')
vim.keymap.set({ 'n' }, '<leader>l2', ':set nornu nonu<CR>')
vim.keymap.set({ 'n' }, '<leader>l3', ':set nornu nu<CR>')
vim.keymap.set({ 'n' }, '<leader>2', ':!wt -d .<CR>', { silent = true })
vim.keymap.set({ 'n' }, '<leader>3', ':!wt -w _quake -d .<CR>', { silent = true })
vim.keymap.set({ 'n' }, '<leader>4', ':!explorer .<CR>', { silent = true })
vim.keymap.set({ 'n' }, '<leader>fr', ':lua require("rest-nvim").run()<CR>', { silent = true })
vim.keymap.set('n', '<c-left>', ':bNext<CR>', { silent = true })
vim.keymap.set('n', '<c-right>', ':bnext<CR>', { silent = true })
vim.keymap.set({ 'n' }, '<S-Tab>', ':bNext<CR>', { silent = true })
vim.keymap.set('n', '<leader>os', ':ObsidianQuickSwitch<CR>')
vim.keymap.set('n', '<leader>og', ':ObsidianSearch<CR>')
vim.keymap.set('n', '<leader>on', ':ObsidianNew<CR>')
vim.keymap.set('n', '<leader>e', ':Neotree toggle float<CR>', { silent = true })
vim.keymap.set('n', '<leader>bd', ':bd<CR>', { silent = true })
vim.keymap.set('n', '<leader>bb', ':bd<CR>', { silent = true })
vim.keymap.set('n', '<leader>cc', ':vsplit | term g++ % && a.exe<CR>i', { silent = true, desc = 'g++ compile and run' })
vim.keymap.set('n', '<leader>ll', ':vsplit | Telescope lsp_definitions<CR>', { silent = true, desc = 'Open definition in vsplit' })
vim.keymap.set('n', '<leader>dd', ':DBUIToggle<CR>', { silent = true, desc = 'Open definition in vsplit' })
vim.api.nvim_set_keymap('t', '<C-t>', '<C-\\><C-n>', { noremap = true, silent = true })
-- vim.api.nvim_set_hl(0, 'CursorLineNr', { bg = '#d183e8', fg = 'black' })
if vim.g.neovide then
    vim.keymap.set('v', '<D-c>', '"+y')
    vim.keymap.set('n', '<D-v>', '"+P')
    vim.keymap.set('v', '<D-v>', '"+P')
    vim.keymap.set('n', '<D-s>', ':w<CR>')
    vim.keymap.set('c', '<D-v>', '<C-R>+')
    vim.keymap.set('i', '<D-v>', '<ESC>l"+Pli')
end
vim.keymap.set('n', '[d', vim.diagnostic.goto_prev, { desc = 'Go to previous diagnostic message' })
vim.keymap.set('n', ']d', vim.diagnostic.goto_next, { desc = 'Go to next diagnostic message' })
vim.keymap.set({ 'n', 'v' }, '<Space>', '<Nop>', { silent = true })
vim.keymap.set('n', 'k', "v:count == 0 ? 'gk' : 'k'", { expr = true, silent = true })
vim.keymap.set('n', 'j', "v:count == 0 ? 'gj' : 'j'", { expr = true, silent = true })

vim.keymap.set('n', '<M-,>', '<c-w>5<')
vim.keymap.set('n', '<M-;>', '<C-W>+')
vim.keymap.set('n', '<M-/>', '<C-W>-')
vim.keymap.set('n', '<M-.>', '<c-w>5>')

vim.keymap.set('n', '<C-w>left', '<C-w>h', { silent = true })
vim.keymap.set('n', '<C-w>down', '<C-w>j', { silent = true })
vim.keymap.set('n', '<C-w>up', '<C-w>k', { silent = true })
vim.keymap.set('n', '<C-w>right', '<C-w>l', { silent = true })
